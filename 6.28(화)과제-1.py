# 문제1-1) 다음은 빈리스트를 만들어 그안에 1,2,3을 넣었다가 넣은 순서대로 꺼내는 코드의 실행흐름이다. 
st = []
st.append(1)
st.append(2)
st.append(3)
st              # [1, 2, 3]
st.pop(0)          
st.pop(0)       
st.pop(0)
st              # []

# 문제1-2) 저장순서:1,2,3/ 꺼낸순서:3,2,1
st = []
st.append(1)
st.append(2)
st.append(3)
st              # [1, 2, 3]
st.pop(-1)       
st.pop(-1)
st.pop(-1)
st              # []

# 문제1-3) clear함수가 아닌 슬라이싱연산으로 코드수정
st = [1, 2, 3, 4]
st.clear()
st                 # [] / clear함수 사용

st = [1, 2, 3, 4]
st[ : ] = []
st                 # [] / 슬라이싱 연산으로 코드수정

st = [1, 2, 3, 4]
del st[:]
st                 # [] / del함수 사용

# 문제 1-4) 빈리스트를 만들어서 그안에 1~10까지 넣었다가, 다시 1~10까지 꺼내는(삭제하는) 코드작성
# 단, 이번에는 넣고 꺼내야 할 값이 많으니 for루프를 이용하는 형태로 코드작성
st = []
for i in range(1, 11):        # (10)으로 정해도된다
    st.append(i)              # st.append(1+i)
st                      # [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
for i in range(1, 11):        # (10)
    i = 0                     # st.pop(0)
    st.pop(i)
st                      # st = []
               # 결과는 나왔지만, 맞는지 여쭤보기

# 문제 1-5) 빈리스트를 만들어서 그안에 1~10까지 넣었다가, 다시 10~1까지 꺼내는(삭제하는) 코드작성
# 단, 이번에도 for루프를 이용하는 형태로 코드작성
st = []
for i in range(1, 11):
    st.append(i)
st                      # [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
for i in range(1, 11):
    i = 1
    st.pop(-i)
st                      # st = []
               # 결과는 나왔지만, 맞는지 여쭤보기

# 문제 1-6) 하나의 리스트에 다른 리스트의 값 전부를 추가하는코드
st = [1, 2]
st.extend([3, 4, 5])
st                       # [1, 2, 3, 4, 5]
# extend함수를 슬라이싱 연산을 이용하는 형태로 수정하여라
# st리스트에는 세번째 값이 없다. 그러나 다른 리스트의 값 전부를 추가할땐 세번째 값이 있다고 가정하고 풀면된다.
# 즉, 세번째 값을 리스트 [3,4,5]의 내용으로 교체하는 슬라이싱 연산문을 작성하여라.
st = [1, 2]
st[2: ] = [3, 4, 5]      # st[2:3] = [3, 4, 5]로 표현해도됨!
st                       # [1, 2, 3, 4, 5]

# 문제 2-1) 문자열 "The Espresso Spirit"을 다음과 같이 선언
# 한번은 모두 대문자로 바꿔출력/ 한번은 모두 소문자로 바꿔출력/ 마지막에 원본 그대로 출력 (총3개 출력)
st = "The Espresso Spirit"
l = st.upper()               
m = st.lower()              
l                            # 'THE ESPRESSO SPIRIT'  (전부 대문자 변경)
m                            # 'the espresso spirit'  (전부 소문자 변경)
st                           # 'The Espresso Spirit' (원본)

# 문제 2-2) "070609-2011xxx"/ "090716-1012xxx" 이중 앞 여섯자리는 생년월일 정보이다.
# 따라서 문자열로 표현된 위의 주민번호에서 생년월일 정보만 꺼내서 출력하고자 하니, 이러한 기능을 제공한느 함수를 만들어 보자.

def b_o(pn):
    ret = pn.split("-")
    return ret[0]  