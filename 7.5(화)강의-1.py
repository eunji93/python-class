# 10 함수에 대한 추가적인 설명
# 10-1) 복습
def ad (n1, n2):        # 전달되는 값을 매개변수 n1, n2로 받음 / def: 함수를 정의 한다
    r = n1 + n2
    return r            # r에 저장된 값을 반환
ad(3, 4)                # 7 / (3,4)<- 인자

for i in (1, 3, 5, 7, 9):
    print(i, end='')    # 1 3 5 7 9 / print 함수/ end='' 하면 아래로 띄지않고 한줄로 작성
                        # 프린트의 함수에 end 라는 매계변수가 있다라고 생각

def who_are_you(name, age):
    print("이름:", name)
    print("나이:", age)
who_are_you(name="이은지", age=20)  # 이름: 이은지/ 나이:20, 각각 지정한 매계변수에 지정된 값을 집어넣겠다.
who_are_you(age=20, name="이은지")  # 이름: 이은지/ 나이:20, 순서에 상관없이 저장된 값을 출력

# 10-2) 이름을 지정해서 값 전달
print (1, 2, 3, end='m^^m')  # 1 2 3 m^^M
print (1, 2, 3, sep= ',')    # 1, 2, 3 / seperation(분리하다)
print (1, 2, 3, sep ='_', end= 'm^^m')  # 1_2_3 m^^m / sep& end 같이 사용 가능

# 10-3) 디폴트 값
def w_a_y(name, age=0):     # age값에 0을 저장(age의 디폴트 값은 0)
    print("이름:", name)
    print("나이:", age)
w_a_y('줴임스~')             # 이름: 줴임스~/ 나이: 0    age값을 지정해주지 않으면 디폴트값인 0이 들어온다.
w_a_y('쟌~', 29)             # 이름: 쟌/ 나이: 29       age 값을 29로 지정해줘서 디폴트 값이 아닌 29가 들어옴

# 10-4) * 함수의 매개변수 참조 관계 * - 이건 꼭 이해해보자
def func(s):          # 매개변수는 메모리 공간이 아니라 이름표라고 생각! 
    s[0] = 0
    s[-1] = 0
st = [1, 2, 3]
func(st)
st                #[0, 2, 0]/ 함수s에 값을 변경해서 넣었는데 왜 st값이 변경될까 ~? :매개변수에 st값을 넣으면 s=st , st이름표에 s이름표를 추가로 붙이는것 = st,s
