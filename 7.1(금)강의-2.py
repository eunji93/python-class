# 9강 튜플과 레인지 (자료형의 일종)
# 9-1)튜플 : 값 또는 데이터를 묶는 형태
st1 = [1, 2, 3]       # mutable 객체 : 안에 저장된 내용을 바꿀수 있다. ex)리스트
type(st1)             # <class 'list'>

tp1 = (1, 2, 3)        # ()소괄호로 묶인게 튜플 / immutable 객체 : 안에 저장된 내용을 바꿀수 없다. ex)문자열(str)
type(tp1)              # <class 'tuple'>
# 리스트와 튜플은 상당히 비슷한데 차이점은 내용을 삭제,추가 즉 변경이 되냐 안되냐 차이

# 9-2) 튜플은 어디다 쓸 것인가? -> 실수로 변경할수있는걸 튜플로 작성하면 변경될수가 없다.
frns = [['동수', 131120], ['진우', 130312], ['선영', 130904]]   # 리스트안에 리스트 (리스트는 정보를 바꿀수 있다)
frns1 = [('동수', 131120), ('진우', 130312), ('선영', 130904)]  # 리스트안에 튜플 - 참조를 목적으로(변경할수없는)

# frns[0][0] = 동수, frns[1][0] = 진우, frns[2][1] = 130904 / 여기서 정보를 바꿀수있는게 리스트
# frns1[0][0] = 동수, frns1[1][0] = 진우, frns1[2][1] = 130904 / 정보를 바꿀수 없는게 튜플

# 연산자 : 리스트를 대상으로 했던 연산자는 튜플에도 성립된다.
nums = (3, 2, 5, 7, 1)
len(nums)                 # 값의 개수는? 5
max(nums)                 # 최대값은? 7
min(nums)                 # 최소값은? 1

nums = (1, 2, 3, 1, 2)
nums.count(2)   # 2몇번등장? 2
nums.index(1)   # 0

nums = (1, 2, 3)
3 in nums       # true
2 not in nums   # false
nums + (4, 5)   # (1, 2, 3, 4, 5)      변경이 아니라 새로 만드는거
nums * 2        # (1, 2, 3, 1, 2, 3)   변경이 아니라 새로 만드는거
nums [0:3]      # (1, 2, 3)            슬라이싱 연산은 창조이기에 튜플도 가능 ~

for i in (1, 3, 5, 7, 9):
    print(i , end ='')             # 1 3 5 7 9 / 튜플도 for루프 가능

# 9-5) 범위를 지정하는 레인지 (범위정보를 저장하는 객체를 range라고 함/ range함수)
for i in range(1, 11):
    print(i, end='')         # 1 2 3 4 5 6 7 8 9 10

r = range(1, 10)             # range라는 함수를 호출해서 r라는 변수에 저장하는것
type(r)                      # <class 'range'>

r = range(1, 1000)           # 1<= 정수 < 1000 / *range 객체, 변수r
for i in r:                  # 변수 r을 이용한 for루프변경
    print(i)                 

r = range(1, 10)        # 1 ~ 9
9 in r                  # true (r이 가지고 있는 *범위안에 9가 있냐 ?)
10 not in r             # true (r이 가지고 있는 *범위안에 10이 없냐 ?)

list((1, 2, 3))     #[1, 2, 3]      리스트를 튜플로
list(range(1, 5))   #[1, 2, 3, 4]   레인지를 리스트로
list("hello")       #['h', 'e', 'l', 'l', 'o']  문자열을 리스트로

tuple([1, 2, 3])    #(1, 2, 3)
tuple(range(1, 5))  #(1, 2, 3, 4)
tuple("hello")      #('h', 'e', 'l', 'l', 'o')

lst = list(range(1, 16))
lst  #[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
tp1 = tuple(range(1, 16))
tp1  #(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15)

range(1, 10, 2)  # 1부터 10이전까지 2씩 증가하는 레인지
range(1, 10, 3)  # 1부터 10이전까지 3씩 증가하는 레인지
list(range(1, 10, 2))  # 1부터 10이전까지 2씩 증가하는 리스트 [1, 3, 5, 7, 9]
list(range(1, 10, 3))  # 1부터 10이전까지 3씩 증가하는 리스트 [1, 4, 7]

list(range(2, 10)) # = list(range(2, 10, 1)) = [2, 3, 4, 5, 6, 7, 8, 9]
list(range(10, 2)) # = list(range(10, 2, 1)) = [] / 범위가생겨나지 않기에 빈리스트가 된다.

list(range(10, 2, -1)) # 10부터 1씩 감소하여 3까지 이르는 정수들 [10, 9, 8, 7, 6, 5, 4, 3]
list(range(10, 2, -2)) # 10부터 2씩 감소하여 3까지 이르는 정수들 [10, 8, 6, 4]
list(range(10, 2, -3)) # 10부터 3씩 감소하여 3까지 이르는 정수들 [10, 7, 4]